{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/projects/next-js-car-doctor/src/lib/dbConnect.js"],"sourcesContent":["import { MongoClient, ServerApiVersion } from 'mongodb';\r\n\r\nexport const collectionNameObj = {\r\n    servicesCollection: 'test-services',\r\n    userCollection: 'test-user',\r\n    bookingCollection: 'test-booking',\r\n}\r\n\r\nconst uri = `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PUSS}@cluster0.9njqe.mongodb.net/?appName=Cluster0`;\r\n// Create a MongoClient with a MongoClientOptions object to set the Stable API version\r\n\r\nexport default function dbConnect (collectionName){\r\n    const client = new MongoClient(uri, {\r\n        serverApi: {\r\n          version: ServerApiVersion.v1,\r\n          strict: true,\r\n          deprecationErrors: true,\r\n        }\r\n      });\r\n      return client.db('car-doctor').collection(collectionName)\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,oBAAoB;IAC7B,oBAAoB;IACpB,gBAAgB;IAChB,mBAAmB;AACvB;AAEA,MAAM,MAAM,CAAC,cAAc,EAAE,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,OAAO,CAAC,6CAA6C,CAAC;AAGvG,SAAS,UAAW,cAAc;IAC7C,MAAM,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAChC,WAAW;YACT,SAAS,uGAAA,CAAA,mBAAgB,CAAC,EAAE;YAC5B,QAAQ;YACR,mBAAmB;QACrB;IACF;IACA,OAAO,OAAO,EAAE,CAAC,cAAc,UAAU,CAAC;AAChD","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file://C%3A/projects/next-js-car-doctor/src/app/api/my-bookings/%5Bid%5D/route.js"],"sourcesContent":["import dbConnect, { collectionNameObj } from \"@/lib/dbConnect\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport const GET = async (req,{params})=>{\r\n    const p = await params;\r\n    const bookingCollection = dbConnect(collectionNameObj.bookingCollection);\r\n    const query = {_id: new ObjectId(p.id)};\r\n    const singleBooking = await bookingCollection.findOne(query);\r\n    return NextResponse.json(singleBooking);\r\n}\r\n\r\nexport const PATCH = async(req,{params})=>{\r\n    const p = await params;\r\n    const bookingCollection = dbConnect(collectionNameObj.bookingCollection);\r\n    const query = {_id: new ObjectId(p.id)};\r\n    const body = await req.json();\r\n    const filter = {\r\n        $set: {...body}\r\n    }\r\n    const option = {\r\n        upsert: true\r\n    }\r\n    const updateResponse = await bookingCollection.updateOne(query,filter,option);\r\n    revalidatePath('/my-bookings')\r\n    return NextResponse.json(updateResponse);\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEO,MAAM,MAAM,OAAO,KAAI,EAAC,MAAM,EAAC;IAClC,MAAM,IAAI,MAAM;IAChB,MAAM,oBAAoB,CAAA,GAAA,yHAAA,CAAA,UAAS,AAAD,EAAE,yHAAA,CAAA,oBAAiB,CAAC,iBAAiB;IACvE,MAAM,QAAQ;QAAC,KAAK,IAAI,uGAAA,CAAA,WAAQ,CAAC,EAAE,EAAE;IAAC;IACtC,MAAM,gBAAgB,MAAM,kBAAkB,OAAO,CAAC;IACtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC7B;AAEO,MAAM,QAAQ,OAAM,KAAI,EAAC,MAAM,EAAC;IACnC,MAAM,IAAI,MAAM;IAChB,MAAM,oBAAoB,CAAA,GAAA,yHAAA,CAAA,UAAS,AAAD,EAAE,yHAAA,CAAA,oBAAiB,CAAC,iBAAiB;IACvE,MAAM,QAAQ;QAAC,KAAK,IAAI,uGAAA,CAAA,WAAQ,CAAC,EAAE,EAAE;IAAC;IACtC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,SAAS;QACX,MAAM;YAAC,GAAG,IAAI;QAAA;IAClB;IACA,MAAM,SAAS;QACX,QAAQ;IACZ;IACA,MAAM,iBAAiB,MAAM,kBAAkB,SAAS,CAAC,OAAM,QAAO;IACtE,CAAA,GAAA,+HAAA,CAAA,iBAAc,AAAD,EAAE;IACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC7B","debugId":null}}]
}