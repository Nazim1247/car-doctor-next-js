{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file://C%3A/projects/next-js-car-doctor/src/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["\r\nimport NextAuth from \"next-auth\"\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\n\r\nexport const authOptions = {\r\n    // Configure one or more authentication providers\r\n    providers: [\r\n        CredentialsProvider({\r\n          // The name to display on the sign in form (e.g. \"Sign in with...\")\r\n          name: \"Credentials\",\r\n          // `credentials` is used to generate a form on the sign in page.\r\n          // You can specify which fields should be submitted, by adding keys to the `credentials` object.\r\n          // e.g. domain, username, password, 2FA token, etc.\r\n          // You can pass any HTML attribute to the <input> tag through the object.\r\n          credentials: {\r\n            email: { label: \"Email\", type: \"email\", placeholder: \"Enter Email\" },\r\n            password: { label: \"Password\", type: \"password\" }\r\n          },\r\n          async authorize(credentials, req) {\r\n            console.log(credentials)\r\n            // Add logic here to look up the user from the credentials supplied\r\n            const user = { id: \"1\", name: \"J Smith\", email: \"jsmith@example.com\" }\r\n      \r\n            if (user) {\r\n              // Any object returned will be saved in `user` property of the JWT\r\n              return user\r\n            } else {\r\n              // If you return null then an error will be displayed advising the user to check their details.\r\n              return null\r\n      \r\n              // You can also Reject this callback with an Error thus the user will be sent to the error page with the error message as a query parameter\r\n            }\r\n          }\r\n        })\r\n      ],\r\n      pages: {\r\n        signIn: '/login'\r\n      }\r\n  }\r\n  \r\n\r\nconst handler = NextAuth(authOptions)\r\n\r\nexport { handler as GET, handler as POST }"],"names":[],"mappings":";;;;;AACA;AACA;;;AAEO,MAAM,cAAc;IACvB,iDAAiD;IACjD,WAAW;QACP,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,mEAAmE;YACnE,MAAM;YACN,gEAAgE;YAChE,gGAAgG;YAChG,mDAAmD;YACnD,yEAAyE;YACzE,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;oBAAS,aAAa;gBAAc;gBACnE,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW,EAAE,GAAG;gBAC9B,QAAQ,GAAG,CAAC;gBACZ,mEAAmE;gBACnE,MAAM,OAAO;oBAAE,IAAI;oBAAK,MAAM;oBAAW,OAAO;gBAAqB;gBAErE,wCAAU;oBACR,kEAAkE;oBAClE,OAAO;gBACT,OAAO;;gBAIL,2IAA2I;gBAC7I;YACF;QACF;KACD;IACD,OAAO;QACL,QAAQ;IACV;AACJ;AAGF,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}}]
}