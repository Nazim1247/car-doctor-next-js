/* [project]/src/app/globals.css [app-client] (css) */
@layer theme, base, components, utilities;

@layer theme {
  :root, :host {
    --color-black: #000;
    --spacing: .25rem;
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
  }
}

@layer base {
  *, :after, :before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }

  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
    font-feature-settings: initial;
    font-variation-settings: initial;
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
    font-feature-settings: initial;
    font-variation-settings: initial;
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: #0000;
    opacity: 1;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}

@layer utilities {
  .menu {
    display: flex;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: .5rem;
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    font-size: .875rem;
  }

  .menu :where(li ul) {
    position: relative;
    margin-inline-start: 1rem;
    padding-inline-start: .5rem;
    white-space: nowrap;
  }

  .menu :where(li ul):before {
    position: absolute;
    inset-inline-start: 0;
    top: .75rem;
    bottom: .75rem;
    background-color: var(--color-base-content);
    opacity: .1;
    width: var(--border);
    content: "";
  }

  .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none;
  }

  .menu :where(li:not(.menu-title) > :not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    border-radius: var(--radius-field);
    padding-inline: .75rem;
    padding-block: .375rem;
    text-align: start;
    transition-property: color, background-color, box-shadow;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    text-wrap: balance;
    user-select: none;
  }

  .menu :where(li > details > summary) {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li > details > summary) {
      outline: 2px solid #0000;
      outline-offset: 2px;
    }
  }

  .menu :where(li > details > summary)::-webkit-details-marker {
    display: none;
  }

  :is(.menu :where(li > details > summary), .menu :where(li > .menu-dropdown-toggle)):after {
    justify-self: flex-end;
    display: block;
    height: .375rem;
    width: .375rem;
    rotate: -135deg;
    translate: 0 -1px;
    transition-property: rotate, translate;
    transition-duration: .2s;
    content: "";
    transform-origin: 50%;
    box-shadow: inset 2px 2px;
    pointer-events: none;
  }

  .menu :where(li > details[open] > summary):after, .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
    rotate: 45deg;
    translate: 0 1px;
  }

  .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn).menu-focus, .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn):focus-visible {
    cursor: pointer;
    background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    :is(.menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn).menu-focus, .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn):focus-visible) {
      outline: 2px solid #0000;
      outline-offset: 2px;
    }
  }

  .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover) {
    cursor: pointer;
    background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    --tw-outline-style: none;
    outline-style: none;
    box-shadow: inset 0 1px oklch(0% 0 0 / .01), inset 0 -1px oklch(100% 0 0 / .01);
  }

  @media (forced-colors: active) {
    .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover) {
      outline: 2px solid #0000;
      outline-offset: 2px;
    }
  }

  .menu :where(li:empty) {
    background-color: var(--color-base-content);
    opacity: .1;
    margin: .5rem 1rem;
    height: 1px;
  }

  .menu :where(li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch;
  }

  .menu :where(li) .badge {
    justify-self: flex-end;
  }

  .menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    --tw-outline-style: none;
    outline-style: none;
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }

  @media (forced-colors: active) {
    :is(.menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active) {
      outline: 2px solid #0000;
      outline-offset: 2px;
    }
  }

  :is(.menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active):not(:is(.menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active):active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }

  .menu :where(li).menu-disabled {
    pointer-events: none;
    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }

  .menu .dropdown:focus-within .menu-dropdown-toggle:after {
    rotate: 45deg;
    translate: 0 1px;
  }

  .menu .dropdown-content {
    margin-top: .5rem;
    padding: .5rem;
  }

  .menu .dropdown-content:before {
    display: none;
  }

  .dropdown {
    position: relative;
    display: inline-block;
    position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
  }

  .dropdown > :not(summary):focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .dropdown > :not(summary):focus {
      outline: 2px solid #0000;
      outline-offset: 2px;
    }
  }

  .dropdown .dropdown-content {
    position: absolute;
  }

  .dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content {
    display: none;
    transform-origin: top;
    opacity: 0;
    scale: 95%;
  }

  .dropdown[popover], .dropdown .dropdown-content {
    z-index: 999;
    animation: .2s dropdown;
    transition-property: opacity, scale, display;
    transition-behavior: allow-discrete;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  }

  @starting-style {
    .dropdown[popover], .dropdown .dropdown-content {
      scale: 95%;
      opacity: 0;
    }
  }

  :is(.dropdown.dropdown-open, .dropdown:not(.dropdown-hover):focus, .dropdown:focus-within) > [tabindex]:first-child {
    pointer-events: none;
  }

  :is(.dropdown.dropdown-open, .dropdown:not(.dropdown-hover):focus, .dropdown:focus-within) .dropdown-content {
    opacity: 1;
  }

  .dropdown.dropdown-hover:hover .dropdown-content {
    opacity: 1;
    scale: 100%;
  }

  .dropdown:is(details) summary::-webkit-details-marker {
    display: none;
  }

  :is(.dropdown.dropdown-open, .dropdown:focus, .dropdown:focus-within) .dropdown-content {
    scale: 100%;
  }

  .dropdown:where([popover]) {
    background: none;
  }

  .dropdown[popover] {
    position: fixed;
    color: inherit;
  }

  @supports not (position-area: bottom) {
    .dropdown[popover] {
      margin: auto;
    }

    .dropdown[popover].dropdown-open:not(:popover-open) {
      display: none;
      transform-origin: top;
      opacity: 0;
      scale: 95%;
    }

    .dropdown[popover]::backdrop {
      background-color: oklab(0% none none / .3);
    }
  }

  .dropdown[popover]:not(.dropdown-open, :popover-open) {
    display: none;
    transform-origin: top;
    opacity: 0;
    scale: 95%;
  }

  .btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: .375rem;
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, .875rem);
    font-weight: 600;
    outline-color: var(--btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 .5px oklch(100% 0 0 / calc(var(--depth) * .15));
    box-shadow: 0 .5px 0 .5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, .25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000), 0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
    --btn-noise: var(--fx-noise);
  }

  :where(.btn) {
    width: unset;
  }

  .prose .btn {
    text-decoration-line: none;
  }

  @media (hover: hover) {
    .btn:hover {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
    }
  }

  .btn:focus-visible {
    outline-width: 2px;
    outline-style: solid;
  }

  .btn:active:not(.btn-active) {
    translate: 0 .5px;
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
    --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
    --btn-shadow: 0 0 0 0 oklch(0% 0 0 / 0), 0 0 0 0 oklch(0% 0 0 / 0);
  }

  .btn:is(:disabled, [disabled], .btn-disabled) {
    pointer-events: none;
    --btn-border: #0000;
    --btn-noise: none;
    --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
  }

  .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
    background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    box-shadow: none;
  }

  @media (hover: hover) {
    .btn:is(:disabled, [disabled], .btn-disabled):hover {
      pointer-events: none;
      background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
      --btn-border: #0000;
      --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
    }
  }

  .btn:is(input[type="checkbox"], input[type="radio"]) {
    appearance: none;
  }

  .btn:is(input[type="checkbox"], input[type="radio"]):after {
    content: attr(aria-label);
  }

  .btn:where(input:checked:not(.filter .btn)) {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
    isolation: isolate;
  }

  .menu-horizontal {
    display: inline-flex;
    flex-direction: row;
  }

  .menu-horizontal > li:not(.menu-title) > details > ul {
    position: absolute;
    margin-inline-start: 0;
    margin-top: 1rem;
    padding-block: .5rem;
    padding-inline-end: .5rem;
  }

  .menu-horizontal > li > details > ul:before {
    content: none;
  }

  :where(.menu-horizontal > li:not(.menu-title) > details > ul) {
    border-radius: var(--radius-box);
    background-color: var(--color-base-100);
    box-shadow: 0 1px 3px oklch(0% 0 0 / .1), 0 1px 2px -1px oklch(0% 0 0 / .1);
  }

  .z-1 {
    z-index: 1;
  }

  .col-span-12 {
    grid-column: span 12 / span 12;
  }

  .filter {
    display: flex;
    flex-wrap: wrap;
  }

  .filter input[type="radio"] {
    width: auto;
  }

  .filter input {
    overflow: hidden;
    opacity: 1;
    scale: 1;
    transition: margin .1s, opacity .3s, padding .3s, border-width .1s;
  }

  .filter input:not(:last-child) {
    margin-inline-end: .25rem;
  }

  .filter input.filter-reset {
    aspect-ratio: 1;
  }

  .filter input.filter-reset:after {
    content: "×";
  }

  .filter:not(:has(input:checked:not(.filter-reset))) .filter-reset, .filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"] {
    scale: 0;
    border-width: 0;
    margin-inline: 0;
    width: 0;
    padding-inline: 0;
    opacity: 0;
  }

  .filter:has(input:checked:not(.filter-reset)) input:not(:checked, .filter-reset, input[type="reset"]) {
    scale: 0;
    border-width: 0;
    margin-inline: 0;
    width: 0;
    padding-inline: 0;
    opacity: 0;
  }

  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .status {
    display: inline-block;
    aspect-ratio: 1;
    width: .5rem;
    height: .5rem;
    border-radius: var(--radius-selector);
    background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: color-mix(in oklab, var(--color-black) 30%, transparent);
    background-image: radial-gradient(circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * .5)), #0000);
    box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
  }

  .navbar {
    display: flex;
    width: 100%;
    align-items: center;
    padding: .5rem;
    min-height: 4rem;
  }

  .navbar-end {
    display: inline-flex;
    align-items: center;
    width: 50%;
    justify-content: flex-end;
  }

  .navbar-start {
    display: inline-flex;
    align-items: center;
    width: 50%;
    justify-content: flex-start;
  }

  .navbar-center {
    display: inline-flex;
    align-items: center;
    flex-shrink: 0;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-52 {
    width: calc(var(--spacing) * 52);
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  .menu-sm :where(li:not(.menu-title) > :not(ul, details, .menu-title)), .menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    border-radius: var(--radius-field);
    padding-inline: .625rem;
    padding-block: .25rem;
    font-size: .75rem;
  }

  .menu-sm .menu-title {
    padding-inline: .75rem;
    padding-block: .5rem;
  }

  .rounded-box {
    border-radius: var(--radius-box);
  }

  .rounded-box {
    border-radius: var(--radius-box);
  }

  .bg-base-100 {
    background-color: var(--color-base-100);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-border: #0000;
    --btn-noise: none;
  }

  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .btn-disabled) {
    outline-color: currentColor;
    --btn-fg: currentColor;
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .btn-outline:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-fg: var(--btn-color);
    --btn-border: var(--btn-color);
    --btn-noise: none;
  }

  @media (width >= 48rem) {
    .md\:col-span-6 {
      grid-column: span 6 / span 6;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-4 {
      grid-column: span 4 / span 4;
    }
  }

  @media (width >= 64rem) {
    .lg\:flex {
      display: flex;
    }
  }

  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }
}

@layer base {
  :where(:root), :root:has(input.theme-controller[value="light"]:checked), [data-theme="light"] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% .006 285.885);
    --color-primary: oklch(45% .24 277.023);
    --color-primary-content: oklch(93% .034 272.788);
    --color-secondary: oklch(65% .241 354.308);
    --color-secondary-content: oklch(94% .028 342.258);
    --color-accent: oklch(77% .152 181.912);
    --color-accent-content: oklch(38% .063 188.416);
    --color-neutral: oklch(14% .005 285.823);
    --color-neutral-content: oklch(92% .004 286.32);
    --color-info: oklch(74% .16 232.661);
    --color-info-content: oklch(29% .066 243.157);
    --color-success: oklch(76% .177 163.223);
    --color-success-content: oklch(37% .077 168.94);
    --color-warning: oklch(82% .189 84.429);
    --color-warning-content: oklch(41% .112 45.904);
    --color-error: oklch(71% .194 13.428);
    --color-error-content: oklch(27% .105 12.094);
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}

@layer base {
  @property --radialprogress {
    syntax: "<percentage>"; inherits: true; initial-value: 0%;
  }
}

@layer base {
  :root {
    scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
  }
}

@layer base {
  :root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked) {
    overflow: hidden;
  }
}

@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}

@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }

  .chat {
    --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
  }
}

@layer base {
  :where(:root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked)) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
  }
}

@keyframes skeleton {
  0% {
    background-position: 150%;
  }

  100% {
    background-position: -50%;
  }
}

@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}

@keyframes radio {
  0% {
    padding: 5px;
  }

  50% {
    padding: 3px;
  }
}

@keyframes dropdown {
  0% {
    opacity: 0;
  }
}

@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}

@keyframes toast {
  0% {
    scale: .9;
    opacity: 0;
  }

  100% {
    scale: 1;
    opacity: 1;
  }
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

/*# sourceMappingURL=src_app_globals_b52d8e88.css.map*/